{
  "contractName": "ERC721TokenMock",
  "abi": [
    {
      "constant": false,
      "inputs": [
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "approvedFor",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "tokensOf",
      "outputs": [
        {
          "name": "",
          "type": "uint256[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "takeOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "_from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "_to",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "_owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "_approved",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": "0x6060604052341561000f57600080fd5b61101f8061001e6000396000f3006060604052600436106100a4576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063095ea7b3146100a957806318160ddd146100eb5780632a6dd48f1461011457806340c10f191461017757806342966c68146101b95780635a3f2672146101dc5780636352211e1461026a57806370a08231146102cd578063a9059cbb1461031a578063b2e6ceeb1461035c575b600080fd5b34156100b457600080fd5b6100e9600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803590602001909190505061037f565b005b34156100f657600080fd5b6100fe610512565b6040518082815260200191505060405180910390f35b341561011f57600080fd5b610135600480803590602001909190505061051b565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561018257600080fd5b6101b7600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019091905050610558565b005b34156101c457600080fd5b6101da6004808035906020019091905050610566565b005b34156101e757600080fd5b610213600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610572565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b8381101561025657808201518184015260208101905061023b565b505050509050019250505060405180910390f35b341561027557600080fd5b61028b600480803590602001909190505061060f565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34156102d857600080fd5b610304600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190505061068d565b6040518082815260200191505060405180910390f35b341561032557600080fd5b61035a600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919080359060200190919050506106d9565b005b341561036757600080fd5b61037d600480803590602001909190505061072c565b005b6000813373ffffffffffffffffffffffffffffffffffffffff166103a28261060f565b73ffffffffffffffffffffffffffffffffffffffff161415156103c457600080fd5b6103cd8361060f565b91508173ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161415151561040a57600080fd5b60006104158461051b565b73ffffffffffffffffffffffffffffffffffffffff1614158061044f575060008473ffffffffffffffffffffffffffffffffffffffff1614155b1561050c57836002600085815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925856040518082815260200191505060405180910390a35b50505050565b60008054905090565b60006002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6105628282610757565b5050565b61056f816107f1565b50565b61057a610f62565b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080548060200260200160405190810160405280929190818152602001828054801561060357602002820191906000526020600020905b8154815260200190600101908083116105ef575b50505050509050919050565b6000806001600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561068457600080fd5b80915050919050565b6000600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490509050919050565b803373ffffffffffffffffffffffffffffffffffffffff166106fa8261060f565b73ffffffffffffffffffffffffffffffffffffffff1614151561071c57600080fd5b6107273384846108c5565b505050565b6107363382610a0e565b151561074157600080fd5b61075461074d8261060f565b33836108c5565b50565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415151561079357600080fd5b61079d8282610a4f565b8173ffffffffffffffffffffffffffffffffffffffff1660007fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b803373ffffffffffffffffffffffffffffffffffffffff166108128261060f565b73ffffffffffffffffffffffffffffffffffffffff1614151561083457600080fd5b600061083f8361051b565b73ffffffffffffffffffffffffffffffffffffffff16141515610867576108663383610bba565b5b6108713383610ca3565b60003373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415151561090157600080fd5b61090a8161060f565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415151561094457600080fd5b8273ffffffffffffffffffffffffffffffffffffffff166109648261060f565b73ffffffffffffffffffffffffffffffffffffffff1614151561098657600080fd5b6109908382610bba565b61099a8382610ca3565b6109a48282610a4f565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b60008273ffffffffffffffffffffffffffffffffffffffff16610a308361051b565b73ffffffffffffffffffffffffffffffffffffffff1614905092915050565b60008073ffffffffffffffffffffffffffffffffffffffff166001600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141515610abe57600080fd5b826001600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610b198361068d565b9050600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054806001018281610b6c9190610f76565b916000526020600020900160008490919091505550806004600084815260200190815260200160002081905550610baf6001600054610f2b90919063ffffffff16565b600081905550505050565b8173ffffffffffffffffffffffffffffffffffffffff16610bda8261060f565b73ffffffffffffffffffffffffffffffffffffffff16141515610bfc57600080fd5b60006002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060008273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a35050565b60008060008473ffffffffffffffffffffffffffffffffffffffff16610cc88561060f565b73ffffffffffffffffffffffffffffffffffffffff16141515610cea57600080fd5b60046000858152602001908152602001600020549250610d1c6001610d0e8761068d565b610f4990919063ffffffff16565b9150600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002082815481101515610d6a57fe5b906000526020600020900154905060006001600086815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600360008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002084815481101515610e1857fe5b9060005260206000209001819055506000600360008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002083815481101515610e7557fe5b906000526020600020900181905550600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480919060019003610ed69190610fa2565b5060006004600086815260200190815260200160002081905550826004600083815260200190815260200160002081905550610f1e6001600054610f4990919063ffffffff16565b6000819055505050505050565b6000808284019050838110151515610f3f57fe5b8091505092915050565b6000828211151515610f5757fe5b818303905092915050565b602060405190810160405280600081525090565b815481835581811511610f9d57818360005260206000209182019101610f9c9190610fce565b5b505050565b815481835581811511610fc957818360005260206000209182019101610fc89190610fce565b5b505050565b610ff091905b80821115610fec576000816000905550600101610fd4565b5090565b905600a165627a7a7230582049b8f9bc858d333ba66589a6e82ab1c758752e9c34e551b91ee396f8850ce0c80029",
  "deployedBytecode": "0x6060604052600436106100a4576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063095ea7b3146100a957806318160ddd146100eb5780632a6dd48f1461011457806340c10f191461017757806342966c68146101b95780635a3f2672146101dc5780636352211e1461026a57806370a08231146102cd578063a9059cbb1461031a578063b2e6ceeb1461035c575b600080fd5b34156100b457600080fd5b6100e9600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803590602001909190505061037f565b005b34156100f657600080fd5b6100fe610512565b6040518082815260200191505060405180910390f35b341561011f57600080fd5b610135600480803590602001909190505061051b565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561018257600080fd5b6101b7600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019091905050610558565b005b34156101c457600080fd5b6101da6004808035906020019091905050610566565b005b34156101e757600080fd5b610213600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610572565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b8381101561025657808201518184015260208101905061023b565b505050509050019250505060405180910390f35b341561027557600080fd5b61028b600480803590602001909190505061060f565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34156102d857600080fd5b610304600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190505061068d565b6040518082815260200191505060405180910390f35b341561032557600080fd5b61035a600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919080359060200190919050506106d9565b005b341561036757600080fd5b61037d600480803590602001909190505061072c565b005b6000813373ffffffffffffffffffffffffffffffffffffffff166103a28261060f565b73ffffffffffffffffffffffffffffffffffffffff161415156103c457600080fd5b6103cd8361060f565b91508173ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161415151561040a57600080fd5b60006104158461051b565b73ffffffffffffffffffffffffffffffffffffffff1614158061044f575060008473ffffffffffffffffffffffffffffffffffffffff1614155b1561050c57836002600085815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925856040518082815260200191505060405180910390a35b50505050565b60008054905090565b60006002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6105628282610757565b5050565b61056f816107f1565b50565b61057a610f62565b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080548060200260200160405190810160405280929190818152602001828054801561060357602002820191906000526020600020905b8154815260200190600101908083116105ef575b50505050509050919050565b6000806001600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561068457600080fd5b80915050919050565b6000600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490509050919050565b803373ffffffffffffffffffffffffffffffffffffffff166106fa8261060f565b73ffffffffffffffffffffffffffffffffffffffff1614151561071c57600080fd5b6107273384846108c5565b505050565b6107363382610a0e565b151561074157600080fd5b61075461074d8261060f565b33836108c5565b50565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415151561079357600080fd5b61079d8282610a4f565b8173ffffffffffffffffffffffffffffffffffffffff1660007fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b803373ffffffffffffffffffffffffffffffffffffffff166108128261060f565b73ffffffffffffffffffffffffffffffffffffffff1614151561083457600080fd5b600061083f8361051b565b73ffffffffffffffffffffffffffffffffffffffff16141515610867576108663383610bba565b5b6108713383610ca3565b60003373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415151561090157600080fd5b61090a8161060f565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415151561094457600080fd5b8273ffffffffffffffffffffffffffffffffffffffff166109648261060f565b73ffffffffffffffffffffffffffffffffffffffff1614151561098657600080fd5b6109908382610bba565b61099a8382610ca3565b6109a48282610a4f565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b60008273ffffffffffffffffffffffffffffffffffffffff16610a308361051b565b73ffffffffffffffffffffffffffffffffffffffff1614905092915050565b60008073ffffffffffffffffffffffffffffffffffffffff166001600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141515610abe57600080fd5b826001600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610b198361068d565b9050600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054806001018281610b6c9190610f76565b916000526020600020900160008490919091505550806004600084815260200190815260200160002081905550610baf6001600054610f2b90919063ffffffff16565b600081905550505050565b8173ffffffffffffffffffffffffffffffffffffffff16610bda8261060f565b73ffffffffffffffffffffffffffffffffffffffff16141515610bfc57600080fd5b60006002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060008273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a35050565b60008060008473ffffffffffffffffffffffffffffffffffffffff16610cc88561060f565b73ffffffffffffffffffffffffffffffffffffffff16141515610cea57600080fd5b60046000858152602001908152602001600020549250610d1c6001610d0e8761068d565b610f4990919063ffffffff16565b9150600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002082815481101515610d6a57fe5b906000526020600020900154905060006001600086815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600360008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002084815481101515610e1857fe5b9060005260206000209001819055506000600360008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002083815481101515610e7557fe5b906000526020600020900181905550600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480919060019003610ed69190610fa2565b5060006004600086815260200190815260200160002081905550826004600083815260200190815260200160002081905550610f1e6001600054610f4990919063ffffffff16565b6000819055505050505050565b6000808284019050838110151515610f3f57fe5b8091505092915050565b6000828211151515610f5757fe5b818303905092915050565b602060405190810160405280600081525090565b815481835581811511610f9d57818360005260206000209182019101610f9c9190610fce565b5b505050565b815481835581811511610fc957818360005260206000209182019101610fc89190610fce565b5b505050565b610ff091905b80821115610fec576000816000905550600101610fd4565b5090565b905600a165627a7a7230582049b8f9bc858d333ba66589a6e82ab1c758752e9c34e551b91ee396f8850ce0c80029",
  "sourceMap": "193:275:40:-;;;238:51;;;;;;;;193:275;;;;;;",
  "deployedSourceMap": "193:275:40:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3216:287:92;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1173:84;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2510:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;295:91:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;392:73;;;;;;;;;;;;;;;;;;;;;;;;;;1774:105:92;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:2;8:100;;;99:1;94:3;90;84:5;80:1;75:3;71;64:6;52:2;49:1;45:3;40:15;;8:100;;;12:14;3:109;;;;;;;;;;;;;;;;;2095:168:92;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1452:111;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2849:142;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3650:177;;;;;;;;;;;;;;;;;;;;;;;;;;3216:287;3300:13;3283:8;1003:10;982:31;;:17;990:8;982:7;:17::i;:::-;:31;;;974:40;;;;;;;;3316:17;3324:8;3316:7;:17::i;:::-;3300:33;;3355:5;3348:12;;:3;:12;;;;3340:21;;;;;;;;3397:1;3372:21;3384:8;3372:11;:21::i;:::-;:26;;;;:38;;;;3409:1;3402:3;:8;;;;3372:38;3368:130;;;3448:3;3421:14;:24;3436:8;3421:24;;;;;;;;;;;;:30;;;;;;;;;;;;;;;;;;3476:3;3460:30;;3469:5;3460:30;;;3481:8;3460:30;;;;;;;;;;;;;;;;;;3368:130;3216:287;;;;:::o;1173:84::-;1217:7;1240:11;;1233:18;;1173:84;:::o;2510:113::-;2570:7;2593:14;:24;2608:8;2593:24;;;;;;;;;;;;;;;;;;;;;2586:31;;2510:113;;;:::o;295:91:40:-;354:26;366:3;371:8;354:11;:26::i;:::-;295:91;;:::o;392:73::-;438:21;450:8;438:11;:21::i;:::-;392:73;:::o;1774:105:92:-;1829:9;;:::i;:::-;1854:11;:19;1866:6;1854:19;;;;;;;;;;;;;;;1847:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1774:105;;;:::o;2095:168::-;2151:7;2167:13;2183:10;:20;2194:8;2183:20;;;;;;;;;;;;;;;;;;;;;2167:36;;2235:1;2218:19;;:5;:19;;;;2210:28;;;;;;;;2252:5;2245:12;;2095:168;;;;:::o;1452:111::-;1508:7;1531:11;:19;1543:6;1531:19;;;;;;;;;;;;;;;:26;;;;1524:33;;1452:111;;;:::o;2849:142::-;2917:8;1003:10;982:31;;:17;990:8;982:7;:17::i;:::-;:31;;;974:40;;;;;;;;2934:51;2959:10;2971:3;2976:8;2934:24;:51::i;:::-;2849:142;;;:::o;3650:177::-;3713:35;3727:10;3739:8;3713:13;:35::i;:::-;3705:44;;;;;;;;3756:65;3781:17;3789:8;3781:7;:17::i;:::-;3800:10;3812:8;3756:24;:65::i;:::-;3650:177;:::o;4011:159::-;4096:1;4081:17;;:3;:17;;;;4073:26;;;;;;;;4106:23;4115:3;4120:8;4106;:23::i;:::-;4150:3;4136:28;;4145:3;4136:28;4155:8;4136:28;;;;;;;;;;;;;;;;;;4011:159;;:::o;4298:242::-;4343:8;1003:10;982:31;;:17;990:8;982:7;:17::i;:::-;:31;;;974:40;;;;;;;;4398:1;4373:21;4385:8;4373:11;:21::i;:::-;:26;;;;4369:84;;;4410:35;4424:10;4436:8;4410:13;:35::i;:::-;4369:84;4459:33;4471:10;4483:8;4459:11;:33::i;:::-;4520:3;4508:10;4499:35;;;4525:8;4499:35;;;;;;;;;;;;;;;;;;4298:242;;:::o;5419:351::-;5538:1;5523:17;;:3;:17;;;;5515:26;;;;;;;;5563:17;5571:8;5563:7;:17::i;:::-;5556:24;;:3;:24;;;;5548:33;;;;;;;;5617:5;5596:26;;:17;5604:8;5596:7;:17::i;:::-;:26;;;5588:35;;;;;;;;5632:30;5646:5;5653:8;5632:13;:30::i;:::-;5669:28;5681:5;5688:8;5669:11;:28::i;:::-;5704:23;5713:3;5718:8;5704;:23::i;:::-;5750:3;5734:30;;5743:5;5734:30;;;5755:8;5734:30;;;;;;;;;;;;;;;;;;5419:351;;;:::o;4974:137::-;5054:4;5099:6;5074:31;;:21;5086:8;5074:11;:21::i;:::-;:31;;;5067:38;;4974:137;;;;:::o;6377:303::-;6524:14;6481:1;6449:34;;:10;:20;6460:8;6449:20;;;;;;;;;;;;;;;;;;;;;:34;;;6441:43;;;;;;;;6514:3;6491:10;:20;6502:8;6491:20;;;;;;;;;;;;:26;;;;;;;;;;;;;;;;;;6541:14;6551:3;6541:9;:14::i;:::-;6524:31;;6562:11;:16;6574:3;6562:16;;;;;;;;;;;;;;;:31;;;;;;;;;;;:::i;:::-;;;;;;;;;;6584:8;6562:31;;;;;;;6629:6;6600:16;:26;6617:8;6600:26;;;;;;;;;;;:35;;;;6656:18;6672:1;6656:11;;:15;;:18;;;;:::i;:::-;6642:11;:32;;;;6377:303;;;:::o;5926:185::-;6027:6;6006:27;;:17;6014:8;6006:7;:17::i;:::-;:27;;;5998:36;;;;;;;;6068:1;6041:14;:24;6056:8;6041:24;;;;;;;;;;;;:28;;;;;;;;;;;;;;;;;;6093:1;6085:6;6076:29;;;6096:8;6076:29;;;;;;;;;;;;;;;;;;5926:185;;:::o;6962:925::-;7075:18;7129:22;7184:17;7060:5;7039:26;;:17;7047:8;7039:7;:17::i;:::-;:26;;;7031:35;;;;;;;;7096:16;:26;7113:8;7096:26;;;;;;;;;;;;7075:47;;7154:23;7175:1;7154:16;7164:5;7154:9;:16::i;:::-;:20;;:23;;;;:::i;:::-;7129:48;;7204:11;:18;7216:5;7204:18;;;;;;;;;;;;;;;7223:14;7204:34;;;;;;;;;;;;;;;;;;;7184:54;;7270:1;7247:10;:20;7258:8;7247:20;;;;;;;;;;;;:24;;;;;;;;;;;;;;;;;;7311:9;7278:11;:18;7290:5;7278:18;;;;;;;;;;;;;;;7297:10;7278:30;;;;;;;;;;;;;;;;;;:42;;;;7364:1;7327:11;:18;7339:5;7327:18;;;;;;;;;;;;;;;7346:14;7327:34;;;;;;;;;;;;;;;;;;:38;;;;7731:11;:18;7743:5;7731:18;;;;;;;;;;;;;;;:27;;;;;;;;;;;;:::i;:::-;;7794:1;7765:16;:26;7782:8;7765:26;;;;;;;;;;;:30;;;;7832:10;7802:16;:27;7819:9;7802:27;;;;;;;;;;;:40;;;;7863:18;7879:1;7863:11;;:15;;:18;;;;:::i;:::-;7849:11;:32;;;;6962:925;;;;;:::o;1050:133:31:-;1108:7;1124:9;1140:1;1136;:5;1124:17;;1160:1;1155;:6;;1148:14;;;;;;1176:1;1169:8;;1050:133;;;;;:::o;870:113::-;928:7;956:1;951;:6;;944:14;;;;;;976:1;972;:5;965:12;;870:113;;;;:::o;193:275:40:-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "pragma solidity ^0.4.18;\r\n\r\nimport \"../token/ERC721/ERC721Token.sol\";\r\n\r\n/**\r\n * @title ERC721TokenMock\r\n * This mock just provides a public mint and burn functions for testing purposes.\r\n */\r\ncontract ERC721TokenMock is ERC721Token {\r\n  function ERC721TokenMock() ERC721Token() public { }\r\n\r\n  function mint(address _to, uint256 _tokenId) public {\r\n    super._mint(_to, _tokenId);\r\n  }\r\n\r\n  function burn(uint256 _tokenId) public {\r\n    super._burn(_tokenId);\r\n  }\r\n}\r\n",
  "sourcePath": "C:\\Users\\Luis.Escobar-Driver\\Documents\\SmartContractProjects\\Skeletor\\contracts\\zeppelin-solidity\\contracts\\mocks\\ERC721TokenMock.sol",
  "ast": {
    "absolutePath": "/C/Users/Luis.Escobar-Driver/Documents/SmartContractProjects/Skeletor/contracts/zeppelin-solidity/contracts/mocks/ERC721TokenMock.sol",
    "exportedSymbols": {
      "ERC721TokenMock": [
        3386
      ]
    },
    "id": 3387,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3349,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".18"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:40"
      },
      {
        "absolutePath": "/C/Users/Luis.Escobar-Driver/Documents/SmartContractProjects/Skeletor/contracts/zeppelin-solidity/contracts/token/ERC721/ERC721Token.sol",
        "file": "../token/ERC721/ERC721Token.sol",
        "id": 3350,
        "nodeType": "ImportDirective",
        "scope": 3387,
        "sourceUnit": 7201,
        "src": "28:41:40",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": [],
            "baseName": {
              "contractScope": null,
              "id": 3351,
              "name": "ERC721Token",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 7200,
              "src": "221:11:40",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721Token_$7200",
                "typeString": "contract ERC721Token"
              }
            },
            "id": 3352,
            "nodeType": "InheritanceSpecifier",
            "src": "221:11:40"
          }
        ],
        "contractDependencies": [
          6702,
          7200
        ],
        "contractKind": "contract",
        "documentation": "@title ERC721TokenMock\r\nThis mock just provides a public mint and burn functions for testing purposes.\r",
        "fullyImplemented": true,
        "id": 3386,
        "linearizedBaseContracts": [
          3386,
          7200,
          6702
        ],
        "name": "ERC721TokenMock",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 3357,
              "nodeType": "Block",
              "src": "286:3:40",
              "statements": []
            },
            "id": 3358,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [],
                "id": 3355,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3354,
                  "name": "ERC721Token",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 7200,
                  "src": "265:11:40",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC721Token_$7200_$",
                    "typeString": "type(contract ERC721Token)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "265:13:40"
              }
            ],
            "name": "ERC721TokenMock",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3353,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "262:2:40"
            },
            "payable": false,
            "returnParameters": {
              "id": 3356,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "286:0:40"
            },
            "scope": 3386,
            "src": "238:51:40",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3372,
              "nodeType": "Block",
              "src": "347:39:40",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3368,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3360,
                        "src": "366:3:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3369,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3362,
                        "src": "371:8:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 3365,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7607,
                        "src": "354:5:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_ERC721TokenMock_$3386",
                          "typeString": "contract super ERC721TokenMock"
                        }
                      },
                      "id": 3367,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6929,
                      "src": "354:11:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 3370,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "354:26:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3371,
                  "nodeType": "ExpressionStatement",
                  "src": "354:26:40"
                }
              ]
            },
            "id": 3373,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3363,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3360,
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "scope": 3373,
                  "src": "309:11:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3359,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "309:7:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3362,
                  "name": "_tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 3373,
                  "src": "322:16:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3361,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "322:7:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "308:31:40"
            },
            "payable": false,
            "returnParameters": {
              "id": 3364,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "347:0:40"
            },
            "scope": 3386,
            "src": "295:91:40",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3384,
              "nodeType": "Block",
              "src": "431:34:40",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3381,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3375,
                        "src": "450:8:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 3378,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7607,
                        "src": "438:5:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_ERC721TokenMock_$3386",
                          "typeString": "contract super ERC721TokenMock"
                        }
                      },
                      "id": 3380,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_burn",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6964,
                      "src": "438:11:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 3382,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "438:21:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3383,
                  "nodeType": "ExpressionStatement",
                  "src": "438:21:40"
                }
              ]
            },
            "id": 3385,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "burn",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3376,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3375,
                  "name": "_tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 3385,
                  "src": "406:16:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3374,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "406:7:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "405:18:40"
            },
            "payable": false,
            "returnParameters": {
              "id": 3377,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "431:0:40"
            },
            "scope": 3386,
            "src": "392:73:40",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 3387,
        "src": "193:275:40"
      }
    ],
    "src": "0:470:40"
  },
  "legacyAST": {
    "absolutePath": "/C/Users/Luis.Escobar-Driver/Documents/SmartContractProjects/Skeletor/contracts/zeppelin-solidity/contracts/mocks/ERC721TokenMock.sol",
    "exportedSymbols": {
      "ERC721TokenMock": [
        3386
      ]
    },
    "id": 3387,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3349,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".18"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:40"
      },
      {
        "absolutePath": "/C/Users/Luis.Escobar-Driver/Documents/SmartContractProjects/Skeletor/contracts/zeppelin-solidity/contracts/token/ERC721/ERC721Token.sol",
        "file": "../token/ERC721/ERC721Token.sol",
        "id": 3350,
        "nodeType": "ImportDirective",
        "scope": 3387,
        "sourceUnit": 7201,
        "src": "28:41:40",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": [],
            "baseName": {
              "contractScope": null,
              "id": 3351,
              "name": "ERC721Token",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 7200,
              "src": "221:11:40",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721Token_$7200",
                "typeString": "contract ERC721Token"
              }
            },
            "id": 3352,
            "nodeType": "InheritanceSpecifier",
            "src": "221:11:40"
          }
        ],
        "contractDependencies": [
          6702,
          7200
        ],
        "contractKind": "contract",
        "documentation": "@title ERC721TokenMock\r\nThis mock just provides a public mint and burn functions for testing purposes.\r",
        "fullyImplemented": true,
        "id": 3386,
        "linearizedBaseContracts": [
          3386,
          7200,
          6702
        ],
        "name": "ERC721TokenMock",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 3357,
              "nodeType": "Block",
              "src": "286:3:40",
              "statements": []
            },
            "id": 3358,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [],
                "id": 3355,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3354,
                  "name": "ERC721Token",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 7200,
                  "src": "265:11:40",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC721Token_$7200_$",
                    "typeString": "type(contract ERC721Token)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "265:13:40"
              }
            ],
            "name": "ERC721TokenMock",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3353,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "262:2:40"
            },
            "payable": false,
            "returnParameters": {
              "id": 3356,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "286:0:40"
            },
            "scope": 3386,
            "src": "238:51:40",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3372,
              "nodeType": "Block",
              "src": "347:39:40",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3368,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3360,
                        "src": "366:3:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3369,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3362,
                        "src": "371:8:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 3365,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7607,
                        "src": "354:5:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_ERC721TokenMock_$3386",
                          "typeString": "contract super ERC721TokenMock"
                        }
                      },
                      "id": 3367,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6929,
                      "src": "354:11:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 3370,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "354:26:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3371,
                  "nodeType": "ExpressionStatement",
                  "src": "354:26:40"
                }
              ]
            },
            "id": 3373,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3363,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3360,
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "scope": 3373,
                  "src": "309:11:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3359,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "309:7:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3362,
                  "name": "_tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 3373,
                  "src": "322:16:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3361,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "322:7:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "308:31:40"
            },
            "payable": false,
            "returnParameters": {
              "id": 3364,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "347:0:40"
            },
            "scope": 3386,
            "src": "295:91:40",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3384,
              "nodeType": "Block",
              "src": "431:34:40",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3381,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3375,
                        "src": "450:8:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 3378,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7607,
                        "src": "438:5:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_ERC721TokenMock_$3386",
                          "typeString": "contract super ERC721TokenMock"
                        }
                      },
                      "id": 3380,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_burn",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6964,
                      "src": "438:11:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 3382,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "438:21:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3383,
                  "nodeType": "ExpressionStatement",
                  "src": "438:21:40"
                }
              ]
            },
            "id": 3385,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "burn",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3376,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3375,
                  "name": "_tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 3385,
                  "src": "406:16:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3374,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "406:7:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "405:18:40"
            },
            "payable": false,
            "returnParameters": {
              "id": 3377,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "431:0:40"
            },
            "scope": 3386,
            "src": "392:73:40",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 3387,
        "src": "193:275:40"
      }
    ],
    "src": "0:470:40"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.19+commit.c4cbbb05.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "2.0.0",
  "updatedAt": "2018-03-21T19:51:18.255Z"
}